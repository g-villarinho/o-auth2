// Code generated by mockery. DO NOT EDIT.

package mocks

import (
	context "context"

	entities "github.com/aetheris-lab/aetheris-id/api/internal/domain/entities"
	mock "github.com/stretchr/testify/mock"
)

// RefreshTokenRepositoryMock is an autogenerated mock type for the RefreshTokenRepository type
type RefreshTokenRepositoryMock struct {
	mock.Mock
}

type RefreshTokenRepositoryMock_Expecter struct {
	mock *mock.Mock
}

func (_m *RefreshTokenRepositoryMock) EXPECT() *RefreshTokenRepositoryMock_Expecter {
	return &RefreshTokenRepositoryMock_Expecter{mock: &_m.Mock}
}

// Create provides a mock function with given fields: ctx, refreshToken
func (_m *RefreshTokenRepositoryMock) Create(ctx context.Context, refreshToken *entities.RefreshToken) error {
	ret := _m.Called(ctx, refreshToken)

	if len(ret) == 0 {
		panic("no return value specified for Create")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *entities.RefreshToken) error); ok {
		r0 = rf(ctx, refreshToken)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// RefreshTokenRepositoryMock_Create_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Create'
type RefreshTokenRepositoryMock_Create_Call struct {
	*mock.Call
}

// Create is a helper method to define mock.On call
//   - ctx context.Context
//   - refreshToken *entities.RefreshToken
func (_e *RefreshTokenRepositoryMock_Expecter) Create(ctx interface{}, refreshToken interface{}) *RefreshTokenRepositoryMock_Create_Call {
	return &RefreshTokenRepositoryMock_Create_Call{Call: _e.mock.On("Create", ctx, refreshToken)}
}

func (_c *RefreshTokenRepositoryMock_Create_Call) Run(run func(ctx context.Context, refreshToken *entities.RefreshToken)) *RefreshTokenRepositoryMock_Create_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(*entities.RefreshToken))
	})
	return _c
}

func (_c *RefreshTokenRepositoryMock_Create_Call) Return(_a0 error) *RefreshTokenRepositoryMock_Create_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *RefreshTokenRepositoryMock_Create_Call) RunAndReturn(run func(context.Context, *entities.RefreshToken) error) *RefreshTokenRepositoryMock_Create_Call {
	_c.Call.Return(run)
	return _c
}

// FindByTokenHash provides a mock function with given fields: ctx, tokenHash
func (_m *RefreshTokenRepositoryMock) FindByTokenHash(ctx context.Context, tokenHash string) (*entities.RefreshToken, error) {
	ret := _m.Called(ctx, tokenHash)

	if len(ret) == 0 {
		panic("no return value specified for FindByTokenHash")
	}

	var r0 *entities.RefreshToken
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string) (*entities.RefreshToken, error)); ok {
		return rf(ctx, tokenHash)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string) *entities.RefreshToken); ok {
		r0 = rf(ctx, tokenHash)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*entities.RefreshToken)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, tokenHash)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// RefreshTokenRepositoryMock_FindByTokenHash_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'FindByTokenHash'
type RefreshTokenRepositoryMock_FindByTokenHash_Call struct {
	*mock.Call
}

// FindByTokenHash is a helper method to define mock.On call
//   - ctx context.Context
//   - tokenHash string
func (_e *RefreshTokenRepositoryMock_Expecter) FindByTokenHash(ctx interface{}, tokenHash interface{}) *RefreshTokenRepositoryMock_FindByTokenHash_Call {
	return &RefreshTokenRepositoryMock_FindByTokenHash_Call{Call: _e.mock.On("FindByTokenHash", ctx, tokenHash)}
}

func (_c *RefreshTokenRepositoryMock_FindByTokenHash_Call) Run(run func(ctx context.Context, tokenHash string)) *RefreshTokenRepositoryMock_FindByTokenHash_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string))
	})
	return _c
}

func (_c *RefreshTokenRepositoryMock_FindByTokenHash_Call) Return(_a0 *entities.RefreshToken, _a1 error) *RefreshTokenRepositoryMock_FindByTokenHash_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *RefreshTokenRepositoryMock_FindByTokenHash_Call) RunAndReturn(run func(context.Context, string) (*entities.RefreshToken, error)) *RefreshTokenRepositoryMock_FindByTokenHash_Call {
	_c.Call.Return(run)
	return _c
}

// NewRefreshTokenRepositoryMock creates a new instance of RefreshTokenRepositoryMock. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewRefreshTokenRepositoryMock(t interface {
	mock.TestingT
	Cleanup(func())
}) *RefreshTokenRepositoryMock {
	mock := &RefreshTokenRepositoryMock{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
